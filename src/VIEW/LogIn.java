/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package VIEW;

import Modele.Employee;
import Modele.Main;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.Date;
import java.util.concurrent.TimeUnit;
import javax.swing.JOptionPane;

/**
 *
 * @author Etienne
 */
public class LogIn extends javax.swing.JFrame {

    private String m_log;
    private String m_password;

    public LogIn() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Panel = new javax.swing.JPanel();
        MailTextField = new javax.swing.JTextField();
        Title = new javax.swing.JLabel();
        MailLabel = new javax.swing.JLabel();
        PasswordLabel = new javax.swing.JLabel();
        PasswordTextField = new javax.swing.JPasswordField();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        Panel.setBackground(new java.awt.Color(255, 255, 255));

        MailTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MailTextFieldActionPerformed(evt);
            }
        });

        Title.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        Title.setText("Connection");

        MailLabel.setText("Email Address");

        PasswordLabel.setText("Password");

        PasswordTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PasswordTextFieldActionPerformed(evt);
            }
        });

        jButton1.setBackground(new java.awt.Color(102, 204, 255));
        jButton1.setForeground(new java.awt.Color(255, 255, 255));
        jButton1.setText("Log in");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout PanelLayout = new javax.swing.GroupLayout(Panel);
        Panel.setLayout(PanelLayout);
        PanelLayout.setHorizontalGroup(
            PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelLayout.createSequentialGroup()
                .addGroup(PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(PanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(MailTextField))
                    .addGroup(PanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(PasswordTextField)))
                .addContainerGap())
            .addGroup(PanelLayout.createSequentialGroup()
                .addGroup(PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(PanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(MailLabel)
                            .addComponent(PasswordLabel)))
                    .addGroup(PanelLayout.createSequentialGroup()
                        .addGap(64, 64, 64)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(PanelLayout.createSequentialGroup()
                        .addGap(41, 41, 41)
                        .addComponent(Title)))
                .addGap(0, 46, Short.MAX_VALUE))
        );
        PanelLayout.setVerticalGroup(
            PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelLayout.createSequentialGroup()
                .addComponent(Title)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(MailLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(MailTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(PasswordLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(PasswordTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton1)
                .addGap(0, 22, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(Panel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(Panel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void MailTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MailTextFieldActionPerformed

    }//GEN-LAST:event_MailTextFieldActionPerformed

    private void PasswordTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PasswordTextFieldActionPerformed

    }//GEN-LAST:event_PasswordTextFieldActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        boolean success = false;

        m_log = MailTextField.getText();
        m_password = PasswordTextField.getText();
        Date naissance;

        System.out.println(m_log);
        System.out.println(m_password);

        //Verify that you enter something
        if (m_log.equals("")) {
            JOptionPane.showMessageDialog(null, "There is no e-mail");
        } else if (m_password.equals("")) {
            JOptionPane.showMessageDialog(null, "There is no password");
        } else {
            Connection com;

            try {
                com = DriverManager.getConnection(Main.url, Main.user, Main.password);
                Statement stmt = com.createStatement();

                if (EmployeeCustomer.customerEmployee == true) {
                    String sqlStatement = "SELECT name,lastname,email,birth FROM member WHERE password = '" + m_password + "' and email = '" + m_log + "'";
                    ResultSet result = stmt.executeQuery(sqlStatement);

                    while (result.next()) {
                        success = true;
                        System.out.println("CONNECTE CONNECTE CONNECTE");
                        String prenom = result.getString("name");
                        String nom = result.getString("lastname");
                        String mail = result.getString("email");

                        naissance = Register.toDate(result.getString("birth"));

                        java.util.Date ajdh = java.util.Calendar.getInstance().getTime();
                        long diffInMillies = Math.abs(ajdh.getTime() - naissance.getTime());
                        long diff = TimeUnit.DAYS.convert(diffInMillies, TimeUnit.MILLISECONDS);
                        double age = diff / 365.25;
                        double discount = 0.0;

                        if (age <= 10) {
                            discount = 0.3;
                        } else if (age > 10 && age <= 30) {
                            discount = 0.1;
                        } else if (age > 30) {
                            discount = 0.5;
                        }

                        Main.connected.setName(prenom);
                        Main.connected.setLastName(nom);
                        Main.connected.setMail(mail);
                        Main.connected.setBirth(naissance);
                        Main.connected.setDiscount(discount);
                        Main.connected.setOnline(true);

                        JOptionPane.showMessageDialog(null, "WELCOME");
                        m_log = null;
                        m_password = null;
                        dispose();
                    }
                } else {
                    String sqlStatement = "SELECT name,lastname,email FROM Employee WHERE password = '" + m_password + "' and email = '" + m_log + "'";
                    ResultSet result = stmt.executeQuery(sqlStatement);
                    System.out.println("EMPLOYEEE");

                    while (result.next()) {
                        success = true;
                        System.out.println("CONNECTE CONNECTE CONNECTE");
                        String prenom = result.getString("name");
                        String nom = result.getString("lastname");
                        String mail = result.getString("email");

                        Main.employeeCo = new Employee(prenom, nom, mail);

                        JOptionPane.showMessageDialog(null, "WELCOME");
                        m_log = null;
                        m_password = null;
                        dispose();
                        
                        EmployeeInterface empl = new EmployeeInterface();
                        empl.setVisible(true);
                        //Page de l'employé
                    }
                }
                com.close();
            } catch (SQLException e) {
                System.out.println("exception : " + e.getMessage());
            }

            if (success == false) {
                JOptionPane.showMessageDialog(null, "Wrong e-mail or Password");
            }
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;

                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(LogIn.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(LogIn.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(LogIn.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(LogIn.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new LogIn().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel MailLabel;
    private javax.swing.JTextField MailTextField;
    private javax.swing.JPanel Panel;
    private javax.swing.JLabel PasswordLabel;
    private javax.swing.JPasswordField PasswordTextField;
    private javax.swing.JLabel Title;
    private javax.swing.JButton jButton1;
    // End of variables declaration//GEN-END:variables
}
