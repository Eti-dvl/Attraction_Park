/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package VIEW;

/**
 *
 * @author Etienne
 */
import Modele.Main;
import Modele.ResaQuantite;
import Modele.Reservation;
import Modele.Ride;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.Date;
import javax.swing.JOptionPane;

public class GuestBook extends javax.swing.JFrame {

    private Ride m_ride;

    public GuestBook(Ride ride) {

        m_ride = ride;
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        RideTitile = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        Description = new javax.swing.JTextPane();
        ReservationDateLabel = new javax.swing.JLabel();
        QuantityLabel = new javax.swing.JLabel();
        jSpinner1 = new javax.swing.JSpinner();
        jXDatePicker1 = new org.jdesktop.swingx.JXDatePicker();
        FirstNameLabel = new javax.swing.JLabel();
        EmailLabel = new javax.swing.JLabel();
        LastNameLabel = new javax.swing.JLabel();
        FirstNameTextField = new javax.swing.JTextField();
        LastNameTextField = new javax.swing.JTextField();
        EmailTextField = new javax.swing.JTextField();
        AdToMyBasketButton = new javax.swing.JButton();
        Image = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));

        RideTitile.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        RideTitile.setText(m_ride.getTitle());

        Description.setEditable(false);
        Description.setText(m_ride.getDescription());
        jScrollPane1.setViewportView(Description);

        ReservationDateLabel.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        ReservationDateLabel.setText("Resevertion date");

        QuantityLabel.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        QuantityLabel.setText("Quantity");

        jSpinner1.setModel(new javax.swing.SpinnerNumberModel(Integer.valueOf(1), Integer.valueOf(1), null, Integer.valueOf(1)));

        int m_quantity = (int) jSpinner1.getValue();
        Date m_date = jXDatePicker1.getDate();
        String m_mail = EmailTextField.getText();

        String day = "";
        String month = "";
        String date = "";

        if (m_date != null) {
            if (m_date.getDate() < 10) {
                day = "0" + m_date.getDate();
            } else {
                day = "" + m_date.getDate();
            }

            if (m_date.getMonth() < 10) {
                month = "0" + (m_date.getMonth() + 1);
            } else {
                month = "" + (m_date.getMonth() + 1);
            }
            date = day + "/" + month + "/" + (1900 + m_date.getYear());

            System.out.println("DAte :" + date);
        }
        Connection com;

        try {

            com = DriverManager.getConnection(Main.url, Main.user, Main.password);

            Statement stmt = com.createStatement();

            String sqlStatement = "SELECT quantité FROM reservation WHERE attractionName ='" + m_ride.getTitle() + "' AND date ='" + date + "'";

            String sqlStatement2 = "SELECT quantité,date FROM reservation WHERE attractionName ='" + m_ride.getTitle() + "'";

            int res = 0;

            ArrayList<ResaQuantite> ResaQuantite = new ArrayList();

            ArrayList<String> date2 = new ArrayList();

            ArrayList<Integer> test = new ArrayList();

            ArrayList<Date> newDate = new ArrayList();

            ArrayList<Integer> quantiteTotaleJournaliere = new ArrayList();

            ResultSet rs = stmt.executeQuery(sqlStatement);

            while (rs.next()) {
                res += rs.getInt(1);

            }
            ResultSet rs2 = stmt.executeQuery(sqlStatement2);
            String date3;
            int quantite3;

            while (rs2.next()) {

                quantite3 = rs2.getInt(1);
                date3 = rs2.getString(2);

                ResaQuantite variable = new ResaQuantite(date3, quantite3);

                boolean check = false;
                for (int k = 0; k < ResaQuantite.size(); k++) {

                    if (date3.equals(ResaQuantite.get(k).getDate())) {
                        ResaQuantite.get(k).setQuantite(quantite3);
                        check = true;
                        System.out.println("TROU");
                    } else {
                    }
                }

                if (check == false) {
                    ResaQuantite.add(variable);
                }

            }

            for (int j = 0; j < ResaQuantite.size(); j++) {

                ResaQuantite.get(j).toString2();
                if (ResaQuantite.get(j).getQuantite() >= m_ride.getMax()) {
                    newDate.add(Register.toDate(ResaQuantite.get(j).getDate()));

                }

            }

            Date[] variable = new Date[newDate.size()];
            for (int i = 0; i < newDate.size(); i++) {
                Date date33 = newDate.get(i);
                variable[i] = date33;
            }
            jXDatePicker1.getMonthView().setUnselectableDates(variable);

            /////////////////////////////////////////
            for (int i = 0; i < Main.AllResa.size(); i++) {

                if (Main.AllResa.get(i).getNom() == m_ride.getTitle() && Main.AllResa.get(i).DateToString() == date) {
                    res += Main.AllResa.get(i).getNombre();
                }
            }

            System.out.println("Num res :" + res);

            if ((res + m_quantity) <= m_ride.getMax()&&m_date!=null) {

                double price = m_quantity;
                price *= m_ride.getPrice();

                Reservation nv = new Reservation(m_ride.getTitle(), price, m_mail, m_date, m_quantity);
                JOptionPane.showMessageDialog(null, "ADDED TO BASKET");
                System.out.println(nv.toString());
                Main.AllResa.add(nv);
            }else if(m_date==null)
            {

            }
            else {

                JOptionPane.showMessageDialog(null, "NOT ENOUGH PLACES FOR THIS DATE\n" + (m_ride.getMax() - res) + " PLACES REMAINING");
            }

            com.close();
        } catch (SQLException e) {
            System.out.println("exception : " + e.getMessage());
        }
        jXDatePicker1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jXDatePicker1ActionPerformed(evt);
            }
        });

        FirstNameLabel.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        FirstNameLabel.setText("First Name");

        EmailLabel.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        EmailLabel.setText("Email");

        LastNameLabel.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        LastNameLabel.setText("Last Name");

        FirstNameTextField.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        FirstNameTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FirstNameTextFieldActionPerformed(evt);
            }
        });

        LastNameTextField.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        EmailTextField.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        EmailTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EmailTextFieldActionPerformed(evt);
            }
        });

        AdToMyBasketButton.setBackground(new java.awt.Color(105, 204, 255));
        AdToMyBasketButton.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        AdToMyBasketButton.setForeground(new java.awt.Color(255, 255, 255));
        AdToMyBasketButton.setText("Add to my Basket");
        AdToMyBasketButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AdToMyBasketButtonActionPerformed(evt);
            }
        });

        Image.setBackground(new java.awt.Color(204, 204, 204));
        Image.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/"+m_ride.getImage()+".jpg")));
        Image.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(EmailLabel)
                                .addGap(51, 51, 51)
                                .addComponent(EmailTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(FirstNameLabel)
                                    .addComponent(QuantityLabel))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jSpinner1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(FirstNameTextField))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(AdToMyBasketButton, javax.swing.GroupLayout.PREFERRED_SIZE, 316, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(LastNameLabel)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(Image, javax.swing.GroupLayout.PREFERRED_SIZE, 350, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 21, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(ReservationDateLabel)))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jXDatePicker1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(LastNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap())
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(95, 95, 95)
                .addComponent(RideTitile)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(RideTitile)
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Image, javax.swing.GroupLayout.PREFERRED_SIZE, 202, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 204, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(15, 15, 15)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(ReservationDateLabel)
                            .addComponent(jXDatePicker1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(QuantityLabel)
                            .addComponent(jSpinner1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(FirstNameLabel)
                            .addComponent(FirstNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(LastNameLabel)
                            .addComponent(LastNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(EmailTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(EmailLabel)
                    .addComponent(AdToMyBasketButton, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void AdToMyBasketButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AdToMyBasketButtonActionPerformed
        int m_quantity = (int) jSpinner1.getValue();
        Date m_date = jXDatePicker1.getDate();
        String m_mail = EmailTextField.getText();

        String day = "";
        String month = "";
        String date = "";

        if (m_date != null) {           
            if (m_date.getDate() < 10) {
                day = "0" + m_date.getDate();
            } else {
                day = "" + m_date.getDate();
            }

            if (m_date.getMonth() < 10) {
                month = "0" + (m_date.getMonth() + 1);
            } else {
                month = "" + (m_date.getMonth() + 1);
            }
            date = day + "/" + month + "/" + (1900 + m_date.getYear());

            System.out.println("DAte :" + date);
        }
        Connection com;

        try {

            com = DriverManager.getConnection(Main.url, Main.user, Main.password);

            Statement stmt = com.createStatement();

            String sqlStatement = "SELECT quantité FROM reservation WHERE attractionName ='" + m_ride.getTitle() + "' AND date ='" + date + "'";

            String sqlStatement2 = "SELECT quantité,date FROM reservation WHERE attractionName ='" + m_ride.getTitle() + "'";

            int res = 0;

            ArrayList<ResaQuantite> ResaQuantite = new ArrayList();

            ArrayList<String> date2 = new ArrayList();

            ArrayList<Integer> test = new ArrayList();

            ArrayList<Date> newDate = new ArrayList();

            ArrayList<Integer> quantiteTotaleJournaliere = new ArrayList();

            ResultSet rs = stmt.executeQuery(sqlStatement);

            while (rs.next()) {
                res += rs.getInt(1);

            }
            ResultSet rs2 = stmt.executeQuery(sqlStatement2);
            String date3;
            int quantite3;

            while (rs2.next()) {

                quantite3 = rs2.getInt(1);
                date3 = rs2.getString(2);

                ResaQuantite variable = new ResaQuantite(date3, quantite3);
 
                boolean check = false;               
                for (int k = 0; k < ResaQuantite.size(); k++) {

                    if (date3.equals(ResaQuantite.get(k).getDate())) {
                        ResaQuantite.get(k).setQuantite(quantite3);
                        check = true;
                        System.out.println("TROU");
                    } else {
                    }
                }

                if (check == false) {
                    ResaQuantite.add(variable);
                }

            }

            for (int j = 0; j < ResaQuantite.size(); j++) {

                ResaQuantite.get(j).toString2();
                if (ResaQuantite.get(j).getQuantite() >= m_ride.getMax()) {
                    newDate.add(Register.toDate(ResaQuantite.get(j).getDate()));

                }

            }

            Date[] variable = new Date[newDate.size()];
            for (int i = 0; i < newDate.size(); i++) {
                Date date33 = newDate.get(i);
                variable[i] = date33;
            }
            jXDatePicker1.getMonthView().setUnselectableDates(variable);

/////////////////////////////////////////
            for (int i = 0; i < Main.AllResa.size(); i++) {

                if (Main.AllResa.get(i).getNom() == m_ride.getTitle() && Main.AllResa.get(i).DateToString() == date) {
                    res += Main.AllResa.get(i).getNombre();
                }
            }

            System.out.println("Num res :" + res);
            java.util.Date ajdh = java.util.Calendar.getInstance().getTime();

            if ( ((res + m_quantity) <= m_ride.getMax()) && (m_date!=null) && (ajdh.getTime() <m_date.getTime())  )
            {

                double price = m_quantity;
                price *= m_ride.getPrice();
                price -= m_ride.getPrice()*m_ride.getDiscount()/100;
                
                Reservation nv = new Reservation(m_ride.getTitle(), price, m_mail, m_date, m_quantity);
                JOptionPane.showMessageDialog(null, "ADDED TO BASKET");
                System.out.println(nv.toString());
                Main.AllResa.add(nv);
            }else if(m_date==null)
            {
                
            JOptionPane.showMessageDialog(null, "UNSELECTABLE DATE\n" );

            }else if(ajdh.getTime() <m_date.getTime())
            {
            JOptionPane.showMessageDialog(null, "PASSED DATE\n" );

            }
            
            else {
                
                JOptionPane.showMessageDialog(null, "NOT ENOUGH PLACES FOR THIS DATE\n" + (m_ride.getMax() - res) + " PLACES REMAINING");
            }

            com.close();
        } catch (SQLException e) {
            System.out.println("exception : " + e.getMessage());
        }

    }//GEN-LAST:event_AdToMyBasketButtonActionPerformed

    private void FirstNameTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FirstNameTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_FirstNameTextFieldActionPerformed

    private void EmailTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EmailTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_EmailTextFieldActionPerformed

    private void jXDatePicker1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jXDatePicker1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jXDatePicker1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton AdToMyBasketButton;
    private javax.swing.JTextPane Description;
    private javax.swing.JLabel EmailLabel;
    private javax.swing.JTextField EmailTextField;
    private javax.swing.JLabel FirstNameLabel;
    private javax.swing.JTextField FirstNameTextField;
    private javax.swing.JLabel Image;
    private javax.swing.JLabel LastNameLabel;
    private javax.swing.JTextField LastNameTextField;
    private javax.swing.JLabel QuantityLabel;
    private javax.swing.JLabel ReservationDateLabel;
    private javax.swing.JLabel RideTitile;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSpinner jSpinner1;
    private org.jdesktop.swingx.JXDatePicker jXDatePicker1;
    // End of variables declaration//GEN-END:variables
}
